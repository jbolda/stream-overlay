/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Zacxophone (https://sketchfab.com/Zacxophone)
license: CC0-1.0 (http://creativecommons.org/publicdomain/zero/1.0/)
source: https://sketchfab.com/3d-models/animated-triceratops-skeleton-06cb55f941d94dc8b95ac46f92d89e7c
title: Animated triceratops skeleton
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Model({ twitchEvent, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "assets/gltf/triceratops/scene.gltf"
  );
  console.log(animations);
  const { actions } = useAnimations(animations, group);
  console.log(actions);
  const actionList = Object.keys(actions);

  console.log(twitchEvent);
  if (twitchEvent.event === "onCommand") {
    let actionText;
    switch (twitchEvent.args[1]) {
      case "fall":
        actionText = "Fall";
        break;
      case "idleground":
        actionText = "IdleGround";
        break;
      case "riseup":
        actionText = "RiseUp";
        break;
      case "roar":
        actionText = "Roar";
        break;
      case "roartowalk":
        actionText = "RoarToWalk";
        break;
      case "walk":
      default:
        actionText = "Walk";
        break;
    }
    console.log(actionText);
    actions[`Armature|${actionText}`].play();
  }

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onClick={() => {
        const randomActionKey =
          actionList[parseInt(Math.random() * actionList.length)];
        // console.log(randomActionKey);
        const randomAction = actions[randomActionKey];
        randomAction.play();
        console.log("boop");
        actions["Armature|Walk"].play();
      }}
    >
      <group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]} scale={0.05}>
            <group>
              <group>
                <group rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group
                  name="Armature"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                >
                  <group>
                    <primitive object={nodes._rootJoint} />
                    <group rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <skinnedMesh
                      geometry={nodes.Object_9.geometry}
                      material={materials["default"]}
                      skeleton={nodes.Object_9.skeleton}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload('/scene.gltf')
