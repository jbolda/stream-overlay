/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React from "react";
import { useGLTF, useMatcapTexture } from "@react-three/drei";
import Instances from "./instances";
import { filterModels } from "./helpers";

import star from "../../assets/gltf/items/star-transformed.glb";

const COUNT = 25;
export default function Model({ position = [0, 0, 0], dropCommand, ...props }) {
  const [matcap] = useMatcapTexture(
    // https://github.com/emmelleppi/matcaps/blob/master/PAGE-31.md
    "E6BF3C_5A4719_977726_FCFC82",
    1024 // size of the texture ( 64, 128, 256, 512, 1024 )
  );

  const { nodes, materials } = useGLTF(star);
  return (
    <Instances
      commandStream={dropCommand}
      commandFilterFn={(command) =>
        filterModels("star", command?.data?.arguments?.input0)
      }
      count={COUNT}
      {...props}
    >
      <instancedMesh
        castShadow
        receiveShadow
        args={[nodes.Cube.geometry, materials.Material, COUNT]}
        count={COUNT}
      >
        <meshMatcapMaterial matcap={matcap} />
      </instancedMesh>
    </Instances>
  );
}

useGLTF.preload(star);
